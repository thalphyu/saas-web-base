@charset "utf-8";
@import "c-variable";
@import "fomantic-ui/dist/semantic.min.css";
@import "bootstrap/scss/bootstrap";
@import "@progress/kendo-theme-material/dist/all.scss";
@import '@angular/material/prebuilt-themes/deeppurple-amber.css';
@import "ngx-easy-table/style.css";

/****** Semantic UI override ******/
html {
	font-size: inherit;
	margin-right: calc(100% - 99.5vw);
	background-color: $body-bg;
}
html, body {
	height: auto;
}
body {
	&.pushable {
		background: $body-bg;
		>.pusher {
			background: $body-bg;

			&:after {
				z-index: 1050;
				@include fill($bg: rgba($black, .5))
			}
		}
	}
	&.dimmable.pushable {
		>.pusher.dimmed {
			overflow: hidden;
			padding-right: 10px;
		}
	}
	&.dimmed.dimmable {
		overflow: hidden;
		//padding-right: 10px;
	}
}
.ui {
	&:not(.gadget-titlebar) {
		cursor: default !important;
	}
	&.grid {
		>.row {
			margin: unset;
		}
	}
	&.menu,
	&.modal,
	&.segment,
	&.segments .segment {
		font-size: $font-size-base
	}
	&.segment {
		padding: 1.5rem;
		border-color: $card-border-color;
	}
	&.dimmer {
		line-height: 1.45;
		z-index: 1050;
		background-color: rgba($black, .32);

		&.modals {
			.modal {
				height: auto;
				position: relative;
			}
		}
	}
	&.menu {
		min-height: 2rem;
		font-family: $font-family-sans-serif;

		&.secondary.pointing {
			a.item {
				color: $tabstrip-item-text;
				padding: $tabstrip-item-padding-y $tabstrip-item-padding-x;

				&.active,
				&.active:hover {
					border-color: $primary;
					color: rgba($primary, .95);
					font-weight: $font-weight-medium;
				}
				&:hover {
					color: $dark;
					background: $tabstrip-item-hovered-bg;
				}
			}
		}
	}

	&.input {
		>input {
			font-family: $font-family-sans-serif;
		}
	}
}
h1, h2, h3, h4, h5 {
	font-family: $font-family-sans-serif
}
p:last-child {
	margin-bottom: $paragraph-margin-bottom;
}
/****** Semantic UI override ******/

body {
	@include scrollbar-style(10px, 5px, $black, $black)
}

.sidebar {
	background: $sidebar-light-bg;
	&.sidebar-border {
		border-right: 1px solid lighten($light, 2%);
	}

	.list-group {
		.list-group-item {
			background: transparent;
			color: $dark-gray;
			.menu-arrow {
				color: lighten($smoke, 10%);
			}
			.nav-icon {
				color: $smoke;
			}
			&:hover {
				background: darken($smokewhite,1%);
				color: $black;

				.icon {
					color: $black;
				}
			}
			&.active {
				background: transparent !important;
				color: $dark;

				.icon {
					color: $dark;
				}
			}
		}
		.submenu {
			> ul .list-group-item {
				color: darken($secondary, 2%);

				&:hover,
				&.router-link-active {
					background: darken($smokewhite,1.5%);
					color: $dark;
				}
			}
		}
	}
}

[sidebar-theme="semi-dark"],
[sidebar-theme="dark"] {
	.sidebar {
		background: $sidebar-dark-bg;

		&.sidebar-border {
			border-color: darken($dark, 1%);
		}
	}
}

@each $color, $value in $doc-theme-color {
	/* @if ((lightness($value)) < 60 and (hue($value)) > 45) {
		.theme-#{$color} {
		}
	} */
	.theme-#{$color} {
		background-color: $value !important;
	}

	[header-theme="theme-#{$color}"] {
		.navbar {
			background: $value !important;
			color: color-contrast($value);

			&.navbar-light .navbar-nav .nav-link {
				color: color-contrast($value);
				&:hover {
					color: rgba(color-contrast($value), .85);
				}
			}
		}

		.hambuger span {
			background: color-contrast($value) !important;
			&:before,
			&:after {
				background: color-contrast($value) !important;
			}
		}

		/*** active-menu-theme ***/
		@if $color == light {

			&[sidebar-theme="semi-dark"],
			&[sidebar-theme="dark"] {
				.list-group {
					.list-group-item {
						.nav-icon {
							color: lighten($smoke, 5%);
						}
						&:hover {
							.nav-icon {
								color: $black;
							}
						}
						&.active {
							color: $value;
							.icon {
								color: $value;
							}
						}
					}
				}
			}
			
		}
		@else {

			.list-group {
				.list-group-item {
					&:hover {
						background: $value;
						color: color-contrast($value);

						.icon {
							color: color-contrast($value);
						}
					}
					&.active,
					.nav-icon {
						color: $value;
					}
					&.active {
						.icon {
							color: $value;
						}
						&:hover {
						}

						.menu-arrow {
							color: $value;
						}
					}
				}

				.submenu {
					> ul .list-group-item {
						&:hover,
						&.router-link-active {
							color: color-contrast($value);
							background: $value;
						}
					}
				}
			}

		}

		&[sidebar-theme="semi-dark"],
		&[sidebar-theme="dark"] {
			.sidebar-user,
			.list-group-item {
				color: $smokewhite;
			}
			.submenu {
				> ul .list-group-item {
					color: $light-gray;
				}
			}
		}

		@if $color == dark {
			&[sidebar-theme="semi-dark"],
			&[sidebar-theme="dark"] {
				.list-group {
					.list-group-item {
						.nav-icon {
							color: lighten($smoke, 5%);
						}
						&:hover,
						&.active {
							background: rgba($black, .2);

							.icon {
								color: color-contrast($value);
							}
						}
						&.active {
							color: color-contrast($value);
						}
					}

					.submenu {
						> ul .list-group-item {
							&:hover,
							&.router-link-active {
								background: rgba($black, .2);
							}
						}
					}
				}
			}
		}

		/*** Modal Dialog Header ***/
		.modal-header,
		.k-dialog-titlebar {
			&:before {
				background: $value !important
			}
		}
	}

}

.theme-light {
	background-color: $default !important;
}
.theme-dark {
	background-color: $dark-gray !important;
}

svg:not(:root) {
	overflow: hidden;
}

.icon {
	display: inline-block;
	width: 24px;
	height: 24px;
	fill: currentColor;
}

.legend-indicator {
	display: inline-block;
	width: 0.5rem;
	height: 0.5rem;
	background-color: $default;
	@include border-radius(.25rem);
}

app-dashboard {
	display: flex;
	flex-direction: column!important;
	flex: 1 0 auto;
}

.header-panel {
	padding: $spacer 0;
	overflow: hidden;
	flex-direction: column;
	gap: 1rem;

	@include media-breakpoint-up(sm) {
		flex-direction: row;
		align-items: flex-end;
	}

	@include media-breakpoint-down(md) {
		flex-wrap: wrap;
	}
}

.scrollblock {
	overflow: hidden;
	/* position: fixed;
	width: calc(100% - 10px); */
}

.sidepanel {
	background: $light;
	position: fixed;
	z-index: 1030;
	top: 0;
	bottom: 0;
	width: $side-panel-width;
	transition: transform .5s ease;
	@include media-breakpoint-up(md) {
		max-width: unset;
	}

	&.position-right {
		right: 0;
		transform: translate3d(110%,0,0);
	}

	&.visible,
	&.open {
		transform: translate3d(0,0,0);
	}

	.dropdown-menu {
		z-index: 1050;
	}
}

.ngx-scrollbar {
	&:hover {
		.simplebar-scrollbar.simplebar-visible:before {
			opacity: .3 !important;
			transition: opacity 0s linear;
		}
	}
	.simplebar-scrollbar.simplebar-visible:before {
		opacity: 0 !important;
		transition: opacity 0.2s linear;
	}
	.simplebar-track {
		&.simplebar-vertical {
			width: 9px !important;
			right: 3px;
		}
	}
}

.head {
	background: $body-bg;
}

.btn {
	&.btn-icon {
		width: calc( #{$btn-padding-x * 2} + #{$btn-font-size} );
		height: calc( #{$btn-padding-x * 2} + #{$btn-font-size} );
		@include vertical-align;

		&.btn-sm {
			width: calc( #{$btn-padding-x-sm * 2} + #{$btn-font-size-sm} + #{$btn-border-width * 2} + 1px );
			height: calc( #{$btn-padding-x-sm * 2} + #{$btn-font-size-sm} + #{$btn-border-width * 2} + 1px );
			border-radius: $btn-icon-border-radius-sm;
		}

		&.btn-lg {
			width: calc( #{$btn-padding-x-lg * 2} + #{$btn-font-size} );
			height: calc( #{$btn-padding-x-lg * 2} + #{$btn-font-size} );
		}

		&.btn-xl {
			width: calc( #{$btn-padding-x-lg * 2} + #{$btn-font-size-lg} + #{$btn-border-width * 2} );
			height: calc( #{$btn-padding-x-lg * 2} + #{$btn-font-size-lg} + #{$btn-border-width * 2} );
		}
	}

	.icon {
		vertical-align: middle;
	}

	&:disabled,
	&[disabled] {
		@include disabled( $disabled-styling );
	}
}
  
.btn-light {
	color: $dark-gray;
	@include hover-focus-active {
		background-color: #dce2e8;
		border-color: #d4dce3;
	}
}

.show > [class*='btn-'].dropdown-toggle:focus {
	box-shadow: none;
}

/* $utilities: map-merge(
	$utilities, (

		"font-size": map-merge(
			map-get($utilities, "font-size"),
			(
				values: $font-sizes,
			),
		),

	)
); */

.badge-lg {
	@include border-radius(.3rem);
	padding: 0.375rem 0.675rem;
	font-weight: $font-weight-semibold;
	font-size: $font-size-xs;
}

.mat-slide-toggle {
	&.mat-checked {
		.mat-slide-toggle-bar {
			background-color: rgba($primary, .54);
		}
		.mat-ripple-element,
		.mat-slide-toggle-thumb {
			background-color: $primary;
		}
	}
}

.simplebar-placeholder {
	width: 100% !important;
}

.k-treeview {
	.k-in {
		@include text-truncate();
		display: block;
		&.k-state-selected {
			color: $primary;
		}
	}

	.k-treeview-filter {
		margin-bottom: .75rem;
	}
}

.k-animation-container {
	z-index: 1040;
	&.k-animation-container-shown {
		@if $enable-shadows {
			box-shadow: none;
		}
		> .k-popup {
			min-width: 8rem;
			box-shadow: 0 0.5rem 1rem rgba($black, 0.15);
			margin-top: .15rem;
		}

	}
}
.k-calendar-view {
	padding-bottom: map-get( $spacing, 2 );
}

.k-grid {
	word-wrap: initial;
	th {
		border-width: 0 1px 1px 0;
	}
	.k-grid-header {
		border-top-width: 1px;

		tr {
			&.k-filter-row {
				td, th { @extend .border-bottom-0 }
			}
		}
		.k-header {
			font-weight: $font-weight-semibold;
			text-transform: uppercase;
		}
		.k-grid-filter {
			@include border-radius(.25rem);

			&:focus,
			&.k-state-active {
				@include fill( $danger, transparent );
			}
		}
	}
	td {
		.btn {
			margin-right: .35rem;
		}
	}
	.k-grid-content {
		min-height: 100px;

		@include scrollbar-style(10px, 10px, $black, $black);
	}

	.k-pager-wrap {
		.k-pager-nav:not(.k-input):not(.k-dropdown-wrap) {
			@extend .rounded-1, .text-primary;
		}
	}
}

.k-window-title {
	@extend .p-0, .m-0;
	@include font-size($h5-font-size);
	white-space: break-spaces;
}

.tooltip {
	.arrow {
		position: absolute;
		display: block;
		width: $tooltip-arrow-width;
		height: $tooltip-arrow-height;

		&::before {
			position: absolute;
			content: "";
			border-color: transparent;
			border-style: solid;
		}
	}

	&.bs-tooltip-bottom-right {
		.arrow {
			top: 0;
			&::before {
				bottom: 0;
				border-width: 0 ($tooltip-arrow-width * .5) $tooltip-arrow-height;
				border-bottom-color: $tooltip-arrow-color;
			}
		}
	}
	&.bs-tooltip-left {
		.arrow {
			right: 0;
			&::before {
				left: $tooltip-arrow-width;
				border-width: $tooltip-arrow-height 0 $tooltip-arrow-height ($tooltip-arrow-width * .5);
				border-left-color: $tooltip-arrow-color;
			}
		}
	}

	.tooltip-inner {
		box-shadow: $box-shadow-sm;
	}
}

.toggle-pwd {
	position: absolute;
	top: 26px;
	right: 0;
}

.login-page {
	.k-floating-label-container {
		&.k-state-empty:not(.k-state-focused) {
			> .k-label {
				transform: scale(0.865);
			}
		}
	}
}

.title {
	line-height: 1.5;
}

.k-form-error {
	color: $white;
	background: $form-feedback-invalid-color;
	padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
	@include border-radius($form-feedback-tooltip-border-radius);
}

.scroll-to-top {
	position: fixed;
	bottom: 15px;
	right: 15px;
	opacity: 0;
	transition: all .2s ease-in-out;
	
	&.show-scrollTop {
		opacity: 1;
	}
}

.list-group {
	&.border-0 {
		.list-group-item {
			border-width: 0;
		}
	}
}

a {
	text-decoration: none;
	&:hover {
		text-decoration: $link-decoration;
	}
}

.breadcrumb-item {
	a {
		color: $dark;
		vertical-align: middle;
		&:hover {
			color: $dark-gray;
			text-decoration: none;
		}
	}
	&.active {
		color: $secondary;
	}
}

.dropstart {
	.dropdown-toggle {
		&:before {
			content: none;
			border: 0;
		}
		&:after {
			/* display: inline-block;
			width: 1.25em;
			line-height: 0;
			content: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='rgba%280,0,0,.5%29' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M5 14l6-6-6-6'/%3e%3c/svg%3e");
			transition: transform 0.35s ease;
			transform-origin: 0.5em 50%; */
			border: 0;
		}
	}
}

.theme-options {
	div {
		cursor: pointer;
		width: 20px;
		height: 20px;
		border-radius: $border-radius;
		display: inline-block;
		opacity: 0.5;

		&:hover,
		&.active {
			opacity: 1;
		}

		&.active {
			background: url('data:image/svg+xml,%3csvg width="16" height="16" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"%3e%3cpath d="m0,0l24,0l0,24l-24,0l0,-24z" fill="none" id="svg_1"/%3e%3cpath d="m9,16.2l-4.2,-4.2l-1.4,1.4l5.6,5.6l12,-12l-1.4,-1.4l-10.6,10.6z" fill="white"/%3e%3c/svg%3e') no-repeat center;
		}
	}
}

.form-check {
	.k-checkbox,
	.k-radio {
		margin-left: -#{$form-check-padding-start};
	}
	.k-radio:before {
		transition: transform linear 100ms;
	}

	&.form-check-inline {
		&:last-child {
			margin-left: 0;
		}
	}
}
.form-check-input {
	//width: $checkbox-size; //MT upd
	//height: $checkbox-size; //MT upd
}
.k-filter-menu {
	.k-filter-menu-container {
		padding: $spacer;
		gap: $spacer;
	}
	.k-multiselect-checkbox {
		pointer-events: none;
	}
	.ngx-scrollbar {
		max-height: 30vh
	}

	.k-radio-list {
		flex-flow: column nowrap;
	}
}

input {
	&::-webkit-outer-spin-button,
	&::-webkit-inner-spin-button {
		-webkit-appearance: none;
		margin: 0;
	}
	&[type=number] {
		-moz-appearance: textfield;
	}
}

select,
input,
.form-control {
	&:-webkit-autofill {
		transition: $input-autofill;

		@include hover-focus-active {
			transition: $input-autofill;
		}
	}

	/* @include placeholder {
		@include opacity(.25);
	}
	&:focus {
		@include placeholder {
			@include opacity(.5);
		}
	} */
}
.k-input,
.k-picker,
.form-select {
	border-width: $kendo-input-border-width 0;
	border-top-color: transparent !important;
}
.form-floating {
	.form-control {
		border-width: 1px 0;
		border-top-color: transparent;
	}
	> label {
		transform: translateY(10px);
	}
}
.k-floating-label-container {
	width: 100%;

	/* &.k-state-focused {
		@include placeholder {
			@include opacity(.5);
		}
	} */

	>.k-label {
		left: 0;
	}

	&.required.k-state-empty {
		.k-label {
			&:after {
				content: " * ";
				position: relative;
				color: $danger;
				font-weight: $font-weight-semibold;
				right: 2px; top: -4px;
			}
		}
	}
}
.input-icon {
	.form-control {
		padding-left: $spacer * 1.75;
	}
	.icon {
		position: absolute;
		bottom: 7px;
	}
}
/* .k-widget {
	&.form-control {
		width: 100%;
		padding: 0;

		&.k-numerictextbox,
		&.k-datepicker,
		&.k-timepicker {
			border-width: 0;
		}
	}
} */


.card-header,
.card-footer {
	border-width: 0;
}
.card-footer {
	display: flex;
	gap: $spacer * .75;
	padding-bottom: 1.75rem;
	justify-content: flex-start;
}

.modal-open {
	overflow: hidden;
	padding-right: 0px !important;
}
.k-dialog-wrapper {
	display: block;
	overflow-x: hidden;
	overflow-y: auto;

	.k-dialog {
		display: block;
		margin: 1.5rem .75rem;

		@include media-breakpoint-up(sm) {
			max-width: 500px;
			margin: 1.75rem auto;
		}
		@include media-breakpoint-down(sm) {
			width: auto !important;
		}

		.k-actions {
			justify-content: flex-end;
		}
	}
	&.k-dialog-xl,
	&.k-dialog-lg {
		.k-dialog {
			max-width: none !important;

			@include media-breakpoint-up(lg) {
				//width: 850px !important;
				max-width: 850px !important;
			}
			@include media-breakpoint-down(lg) {
				margin: 1.5rem .75rem;
			}
		}
	}
	&.k-dialog-xl {
		.k-dialog {
			@include media-breakpoint-up(xl) {
				width: 1140px !important;
				max-width: 1140px !important;
			}
			@include media-breakpoint-down(lg) {
				width: auto !important;
			}
		}
	}
	&.k-dialog-lg {
		.k-dialog {
			@include media-breakpoint-down(md) {
				width: auto !important;
			}
		}
	}
	.k-window-actions {
		margin: -0.25rem ($modal-header-padding-x * -.5) ($modal-header-padding-y * -.5) auto;
		opacity: .5;
		align-self: flex-start;
		.k-button:before {
			background: transparent;
		}
		&:hover {
			opacity: 1;
		}
		.k-icon {
			font-size: $font-size-base * 1.45
		}
	}

}
.modal-header,
.k-dialog-titlebar {
	position: relative;
	&:before {
		content: "";
		height: 38px;
		width: 5px;
		left: 0;
		top: 1.25rem;
		position: absolute;
		background: $light-gray;
	}
	.btn-close {
		align-self: flex-start;
		margin-top: -0.25rem;
	}
}
.k-dialog,
.modal-content {
	box-shadow: $box-shadow;
	border-radius: $border-radius;
}

a[name="itemName"]{
  color: $dark-gray;
  &:hover,
  &.active {
	 color: $primary
  }
}

.timeline {
	position: relative;
	&:before {
		content: '';
		position: absolute;
		left: 5.25rem;
		top: 1.15rem;
		bottom: 0;
		z-index: 400;
		width: 2px;
		background-color: lighten($light-gray, 10%);
		margin-left: -1px;
	}

	.timeline-item {
		position: relative;

		&:before {
			content: '';
			position: absolute;
			left: 4.8rem;
			top: 3px;
			border: 2px solid $primary;
			width: 14px;
			height: 14px;
			background-color: lighten($light-gray, 10%);
			@include border-radius(50%)
		}

		&:hover {
			&:before {
				border-color: $info
			}
		}

		.timeline-date {
			position: absolute;
			display: block;
			right: 45px;
			top: 28px;
			width: 145px;
			text-align: right;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}

		.timeline-content {
			margin-left: 6.5rem;

			a:hover {
				color: $primary !important
			}
		}
		&:last-child {
			padding-bottom: 0 !important
		}
	}
}

.sticky-profile-img {
	position: sticky;
	top: $header-height + 15;
}

.k-state-default {
	background-color: $white;
}
.k-tabstrip > .k-content {
	overflow: inherit;
	padding-bottom: 0;
	&:focus,
	&.k-state-focused {
		outline-width: 0;
	}
}
.k-tabstrip-items-wrapper .k-item {
	&.k-state-active {
		.k-link {
			font-weight: $font-weight-medium;
			color: $primary;
		}
	}
}

.k-list-filter {
	> .k-textbox {
		@include border-radius( 0 );
		@include fill($bg: transparent);
	}
	> .k-icon {
		right: 24px;
	}
}

.k-upload {
	.k-dropzone {
		//gap: 1rem;
		flex-direction: column;
		@include fill( $bg: transparent );

		@include media-breakpoint-between(sm, xl) {
			flex-direction: row;
		}

	}
}

.custom-upload {
	@include fill( $bg: transparent );
	display: flex;
	flex-direction: column;

	/* @include media-breakpoint-between(sm, xl) {
		flex-direction: row;
		gap: 1rem;
	} */

	.k-dropzone {
		flex-direction: column;
		font-size: $font-size-sm;

		/* @include media-breakpoint-between(sm, xl) {
			flex-direction: row;
			gap: 1.5rem;
		} */

		.k-upload-status {
			display: none;
		}
	}

	&.hide-hint {
		.k-dropzone-hint {
			display: none;
		}
		.k-upload-files {
			margin-bottom: 1rem;
		}
	}

	.k-upload-button {
		@include border-radius(50%);
		background: #FFF url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" height="24px" viewBox="0 0 24 24" width="24px"><path d="M14.12 4l1.83 2H20v12H4V6h4.05l1.83-2h4.24M15 2H9L7.17 4H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2h-3.17L15 2zm-3 7c1.65 0 3 1.35 3 3s-1.35 3-3 3-3-1.35-3-3 1.35-3 3-3m0-2c-2.76 0-5 2.24-5 5s2.24 5 5 5 5-2.24 5-5-2.24-5-5-5z"/></svg>') no-repeat center;
		min-width: auto;
		@extend .shadow-sm;
		width: 42px; height: 42px;
		margin: -2rem 0 1rem;

		/* @include media-breakpoint-between(sm, xl) {
			margin: 0 0 0 -3rem;
		} */

		span { display: none; }
	}
	.k-upload-files {
		@include fill( $bg: $light, $border: $light );
		.k-file-name {
			@extend .text-wrap, .text-break
		}
		.k-file-single {
			.k-file-group-wrapper,
			kendo-upload-file-list-item-action-button {
				align-self: flex-start;
			}
		}
	}
}

@each $name, $i-size in $i-sizes {
	.i-#{$name} {
		height: #{$i-size}px;
		width: #{$i-size}px;
	}
}

@each $name, $size in $avatars {
	.avatar-#{$name} {
		height: #{$size}px;
		width: #{$size}px;	
	}
}

[class*='avatar-'] {
	@include vertical-align;
	border-radius: $border-radius-lg;
	flex-direction: column;
}

@each $color, $value in $theme-colors {
	.bg-light-#{$color} {
		color: color-contrast($value);
		@include gradient-bg(shift-color($value, $bg-light-scale));
	}

	.btn-light-#{$color} {
		@include button-variant( shift-color($value, $bg-light-scale), transparent, $value, $value, transparent, $white, $value, transparent, $white );
		/*@include button-variant( shift-color($value, $bg-light-scale), transparent, $value);*/
	}

	.btn-hover-#{$color} {
		@include hover-focus {
			&:not(:disabled):not(.disabled) {
				@include button-variant($value, $value, transparent);
			}
		}
	}

	.alert-#{$color} {
		@include alert-variant(shift-color($value, $alert-bg-scale), shift-color($value, $alert-border-scale), $value);
	}
}

.btn-clean {
	@include fill($secondary, transparent, transparent);

	@include hover-focus {
		&:not(:disabled):not(.disabled) {
			@include fill($primary, $light, transparent);
		}
	}
}
.btn-xs {
	@extend .btn-sm;
	@include font-size($font-size-xs);
}

@include media-breakpoint-up(md) {
	.left-column {
		width: 260px;
		flex: 0 0 260px;
		border-right: 1px solid $light-gray
	}

	.flex-cell {
		flex: 1 1 0
	}

	.modal-lg { max-width: 88%; }
}

@include media-breakpoint-up(lg) {
	.animate {
		animation-duration: 0.3s;
		-webkit-animation-duration: 0.3s;
		animation-fill-mode: both;
		-webkit-animation-fill-mode: both;
	}

	.backdrop-overlay { 
		display: none
	}

	.modal-lg { max-width: 850px; }

	/*.k-dialog-xl,
	.k-dialog-lg {
		.k-dialog {
			width: 850px !important;
			max-width: 850px !important;
			margin: 1.75rem auto;
		}
	}*/
}

@include media-breakpoint-up(xl) {
	.modal-lg { max-width: 900px; }
	/*.k-dialog-xl {
		.k-dialog {
			width: 1140px !important;
			max-width: 1140px !important;
		}
	}*/
}

@include media-breakpoint-down(lg) {
	.backdrop-overlay {
		position: fixed;
		top: 0;
		bottom: 0;
		left: 0;
		right: 0;
		background: rgba($black , .6);
		z-index: 1030;
		display: none;
		
		&.collapsed {
			display: block;
		}
	}

}

@include media-breakpoint-down(md) {
	.dropdown-menu-lg {
		min-width: 70vw
	}

	.modal-lg { max-width: 95%; }
}

@include media-breakpoint-down(sm) {
	.dropdown-menu-center {
		left: 0 !important;
		transform: translate(-70%, 0) !important;
	}
}

